name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
    
    - name: Install package in development mode
      run: |
        pip install -e .
    
    - name: Generate sample data
      run: |
        python examples/sample_data/generate_sample_data.py
    
    - name: Test package import
      run: |
        python -c "import semantic_search; print('Package imported successfully')"
    
    - name: Run basic tests
      run: |
        python -m pytest tests/test_models.py -v

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install package in development mode
      run: |
        pip install -e .
    
    - name: Run basic integration test
      run: |
        python examples/sample_data/generate_sample_data.py
        echo "Sample data generated successfully"

  # docker-test:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Build Docker image
  #     run: |
  #       docker build -f docker/Dockerfile -t semantic-search:test .
  #   
  #   - name: Test Docker container
  #     run: |
  #       docker run --rm semantic-search:test health
  #       docker run --rm semantic-search:test generate-data
  #       docker run --rm semantic-search:test demo

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy flake8
        pip install -r requirements.txt
    
    - name: Install package in development mode
      run: |
        pip install -e .
    
    - name: Test basic imports
      run: |
        python -c "from semantic_search.models import Document, Query, SearchResult; print('Models imported successfully')"
        python -c "from semantic_search.core import SemanticSearchEngine; print('Engine imported successfully')"